#!/bin/csh
# $Header$
# Version: $Revision$
# By $Author$
# Install a deployment tar created by moptop_make_deployment
# Usage:
#	moptop_tar_install <machine>
set delbin = 1
set machine_name = ""
foreach arg ( $argv )
	switch ( $arg )
		case "-nodelbin":
		    set delbin = 0
	     	    breaksw
		case "-help":
		    echo "$0 [-help] [-nodelbin] <machine>"
		    echo "\t -nodelbin does not delete the binary directory before installation,"
		    echo "\t\tfor multiple instrument installations."
	     	    breaksw
		default:
		    set machine_name = $arg
		    breaksw
	endsw	   
end
if ( "${machine_name}" == "") then
	echo "$0 [-help] [-nodelbin] <machine>"
	echo "\t-nodelbin does not delete the binary directory before installation, "
	echo "\t\tfor multiple instrument installations."
	exit 0
endif
set current_dir         = `pwd`
set icc                 = icc
set deployment_tar 	= "moptop_deployment_${machine_name}.tar"
#
# Ensure new installation files are not under /icc (which gets deleted)
#
echo "${current_dir}" | /bin/grep -q '/icc'
set grep_status = $status
if( ${grep_status} == 0 ) then
    echo "Installation files under /icc. Move ALL file to ~eng/download/<date> and try again."
    exit 1
endif
#
# Check new installation is in current_dir
#
set file_list = "${deployment_tar}.gz icc_cshrc icc_cshrc_edit.awk"
foreach file ( ${file_list} )
    if( ! -e ${file} ) then
        echo "Failed to find ${file}. New installation not ready to install."
        exit 1
    endif
end
#
# Ensure LD_LIBRARY_PATH includes moptop libraries dir so send_command below works.
#
if ( -d /icc/bin/moptop/lib/${HOSTTYPE} ) then
    echo "Adding /icc/bin/moptop/lib/${HOSTTYPE} to LD_LIBRARY_PATH."
    setenv LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:/icc/bin/moptop/lib/${HOSTTYPE}"
endif
#
# Kill any running processes
#
if ( -x /icc/bin/scripts/killhup.csh ) then
    echo "Trying to kill AutoBooter."
    /icc/bin/scripts/killhup.csh AutoBooter
else
    echo "killhup not found:FAILED to stop running processess."
endif
if ( -x /icc/bin/commandserver/test/${HOSTTYPE}/send_command  ) then
    echo "Trying to shutdown moptop c layer."
    /icc/bin/commandserver/test/${HOSTTYPE}/send_command  -h ${machine_name} -p 1111 -c "shutdown"
else
    echo "send_command not found:FAILED to stop running moptop."
endif
#
# Kill nfs server - /icc/tmp is usually mounted for the rcs machine
#
echo "Stopping NFS server (/icc/tmp is exported)..."
/etc/init.d/nfs stop
#
# Delete old installation
# DON'T delete the log directory.
# Only delete old binaries if delbin set.
#
if( ${delbin} == 1 ) then
    if( -d /${icc}/bin ) then
	echo "Deleting /${icc}/bin directory."
	rm -rf /${icc}/bin/*
    endif
endif
#
# Create new top level directory (if it does not already exist
#
if( ! -d /${icc} ) then
    mkdir /${icc}
endif
#
# Extract new installation
#
echo "Copying deployment tar ${current_dir}/${deployment_tar}.gz to /."
cp ${current_dir}/${deployment_tar}.gz /
cd /
echo "Gunziping deployment tar ${deployment_tar}.gz."
gunzip ${deployment_tar}.gz
echo "Extracting deployment tar."
tar xvf ${deployment_tar}
echo "Removing deployment tar."
rm -f ${deployment_tar}
#
# Init script setup
#
# Init script already copied as /etc/init.d/autobooter
# Ubuntu 10.04 uses runlevel 2: runlevels 2345 are all multi-user 
echo "Setting up autobooter initialisation script."
set dir_list = "/etc/rc0.d /etc/rc1.d /etc/rc6.d"
foreach dir ( ${dir_list} )
    cd ${dir}
    if( ! -e K01autobooter ) then
	ln -s ../init.d/autobooter K01autobooter
    endif
end
set dir_list = " /etc/rc2.d /etc/rc3.d /etc/rc4.d /etc/rc5.d"
foreach dir ( ${dir_list} )
    cd ${dir}
    if( ! -e S99autobooter ) then
	ln -s ../init.d/autobooter S99autobooter
    endif
end
echo "Setting up autobooter script."
# Ubuntu 10.04
chmod ugo+x /etc/init.d/autobooter
chmod go-w /etc/init.d/autobooter
chown root:root /etc/init.d/autobooter
#
# Reseting / and /etc ownership
#
echo "Reseting / ownership."
chown root:root /
chmod go-w /
echo "Reseting /etc ownership."
chown root:root /etc
chmod go-w /etc
echo "Reseting /etc/init.d ownership."
chown root:root /etc/init.d/
#
# Set up /icc ownership
#
echo "Setting up /icc ownership."
chown -R eng:ltdev /icc
#
# Editing ~eng .cshrc
#
echo "Editing eng .cshrc"
cat ~eng/.cshrc | awk -f ${current_dir}/icc_cshrc_edit.awk > ~eng/.cshrc.tmp
cat ~eng/.cshrc.tmp ${current_dir}/icc_cshrc > ~eng/.cshrc
rm -f ~eng/.cshrc.tmp
#
# Bodge fix for zen installs. 
#
if( ! -r /icc/bin/lib/x86_64-linux/libcfitsio.so.8 ) then
    cd /icc/bin/lib/x86_64-linux
    ln -s libcfitsio.so  libcfitsio.so.8
endif
#
# Finished
#
echo "Installation completed, please 'reboot'."
#
# $Log$
#
